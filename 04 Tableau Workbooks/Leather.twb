<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' inline='true' name='oracle.42136.691246585700' version='9.0'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_DAS3734' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_das3734'>
        <relation name='ARTICLELEATHER_REVISED' table='[C##CS329E_DAS3734].[ARTICLELEATHER_REVISED]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>AL_COUNTRY_AREA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_COUNTRY_AREA]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COUNTRY_AREA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>60</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_YEAR]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_COMM_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_COMM_CODE]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COMM_CODE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_COMMODITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_COMMODITY]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COMMODITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_FLOW</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_FLOW]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_FLOW</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_TRADE_USD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_TRADE_USD]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_TRADE_USD</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_WEIGHT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_WEIGHT]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_WEIGHT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_QUANTITY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_QUANTITY_NAME]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_QUANTITY_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_QUANTITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_QUANTITY]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_QUANTITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_SERIAL_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_SERIAL_ID]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_SERIAL_ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Al Commodity' datatype='string' name='[AL_COMMODITY]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Comm Code' datatype='real' name='[AL_COMM_CODE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Al Flow' datatype='string' name='[AL_FLOW]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Quantity' datatype='real' name='[AL_QUANTITY]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Quantity Name' datatype='string' name='[AL_QUANTITY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Serial Id' datatype='real' name='[AL_SERIAL_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Al Trade Usd' datatype='real' name='[AL_TRADE_USD]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Weight' datatype='real' name='[AL_WEIGHT]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Year' datatype='real' name='[AL_YEAR]' role='dimension' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AL_COUNTRY_AREA:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium-Luxembourg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cook Isds&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fmr Fed. Rep. of Germany&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Neth. Antilles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;So. African Customs Union&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Turks and Caicos Isds&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Other Asia, nes&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;United Rep. of Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Rep. of Moldova&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Solomon Isds&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Faeroe Isds&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wallis and Futuna Isds&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Czech Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Central African Rep.&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Occ. Palestinian Terr.&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;TFYR of Macedonia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Dominican Rep.&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Rep. of Korea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Leather Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42136.691246585700' />
          </datasources>
          <datasource-dependencies datasource='oracle.42136.691246585700'>
            <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Al Trade Usd' datatype='real' name='[AL_TRADE_USD]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_TRADE_USD]' derivation='Sum' name='[sum:AL_TRADE_USD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;China, Hong Kong SAR&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;EU-27&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Rep. of Korea&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' direction='DESC' using='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]'>
          </sort>
          <filter class='quantitative' column='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' included-values='in-range'>
            <min>23680716753.0</min>
            <max>286799369798.0</max>
          </filter>
          <slices>
            <column>[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]</column>
            <column>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' scope='rows' value='Capital Generated in USD' />
            <format attr='subtitle' class='0' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='Georgia' />
            <format attr='font-weight' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='bold' />
            <format attr='color' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='#000000' />
            <format attr='font-family' field='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' value='Georgia' />
            <format attr='color' field='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' value='#000000' />
            <format attr='font-weight' field='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='Georgia' />
            <format attr='color' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='#000000' />
            <format attr='font-weight' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='bold' />
            <format attr='font-family' field='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' value='Georgia' />
            <format attr='color' field='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42136.691246585700].[sum:AL_TRADE_USD:qk]</rows>
        <cols>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Leather Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42136.691246585700' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42136.691246585700'>
            <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Al Quantity' datatype='real' name='[AL_QUANTITY]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_QUANTITY]' derivation='Sum' name='[sum:AL_QUANTITY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;China, Hong Kong SAR&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;EU-27&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>&quot;EU-27&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' included-values='in-range'>
            <min>1000000000.0</min>
            <max>75597555700.0</max>
          </filter>
          <slices>
            <column>[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]</column>
            <column>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' scope='rows' value='Quantity of Leather Goods' />
            <format attr='subtitle' class='0' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' value='Georgia' />
            <format attr='font-weight' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Georgia' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42136.691246585700].[sum:AL_QUANTITY:qk]</rows>
        <cols>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42136.691246585700' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42136.691246585700'>
            <column caption='Al Commodity' datatype='string' name='[AL_COMMODITY]' role='dimension' type='nominal'>
            </column>
            <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Al Weight' datatype='real' name='[AL_WEIGHT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_COMMODITY]' derivation='None' name='[none:AL_COMMODITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_WEIGHT]' derivation='Sum' name='[sum:AL_WEIGHT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Rep. of Korea&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;USA&quot;' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.42136.691246585700].[sum:AL_WEIGHT:qk]' />
              <color column='[oracle.42136.691246585700].[sum:AL_WEIGHT:qk]' />
              <text column='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' />
              <text column='[oracle.42136.691246585700].[none:AL_COMMODITY:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Leather Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Leather Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42136.691246585700].[none:AL_COUNTRY_AREA:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42136.691246585700].[sum:AL_WEIGHT:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42136.691246585700].[none:AL_COMMODITY:nk]</field>
          <field>[oracle.42136.691246585700].[none:AL_FLOW:nk]</field>
          <field>[oracle.42136.691246585700].[none:AL_QUANTITY_NAME:nk]</field>
          <field>[oracle.42136.691246585700].[none:AL_YEAR:qk]</field>
          <field>[oracle.42136.691246585700].[sum:AL_WEIGHT:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Leather Quantity' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Leather Cost' width='192'>
      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
      ceP+H5RZlE3T1fcmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2955Mc553n+TxpKk1llve2faOBNgAaHqCnKFKkKGmpGa2G0s7c7Zi9uLi7
      jbsI3cZdbJxe7B9wG3tzd7t7obvdnRlpJK2koehEA4AkvG9vq015m+Wr0j/3okESBJoAuqsB
      Eov8REd3VtbjMvubz/PL3+MgQggYGGwX7KsugMGjjSEgg44wBGTQEYaADDrCEJBBRxgCMugI
      Q0AGHWEIyKAjDAEZdIQhIIOOMARk0BGGgAw6whCQQUcYAjLoCGJ70QRBIElyZ4ti8CiyTQGR
      JJktJS8svbOzpfn60+UeIpiHkhMCUCMRoTyErHCVxkzq9uJuU0AAgHhh4d9d+Mlg+EkWVVON
      ZquxLBNuFyGnG8K20/z686MTP2FBe/piyt3v1dtSuN+VWSm5Iw6CgDuck45BiWtUEvOThZ4D
      oUa+Fe53JJeKoX7XDmcEACN7ESxMnIv7dgW0lhgd8CSX875uN4Hf+6K2LyAAgM//og8ur8i2
      0eg3zGhkKp90McyusC2Rv06Y+1kkXE1c7ST9ryfn35wbfWkku5RdOL+eT4VIAtVKjUZF6tkf
      Wr0a9w5HggF2Z3JC2rl3Y0+8tjuxXLr+zpLw9AASxXq+0lSIgV22uRu5wRN9Ng7fkaw+/t3k
      gVfHUwvp2TPL2VQXgel1oVErS/3j4aUra8HR7lDAvGnEjgTEsbaykMu3KwP+g/FyYbz7aYBg
      Nf/uSPe3mqraYz9yI3FV6ySDryWyAsxmwuXnYwyt1qrJvAJU9cAh5+TljJiu5CVTMNCzMzkh
      pGMExVJ2N8W6rJmFDIZBTVYdVtPKglJazy37vQfGbDuSlaRCjiXcfh5nWblcXi8qmKoePOC6
      fjnVSgoFmQ692rdpxI4EtLL+zjf2fMenycXaqtDK5avrAIBKo9gic1azJ1dNdJL415bRQ77z
      b87TNtYTsVk4TCUUAABnM7PltsJSnJXasZwwor+fO//mnC3i8EVtANw0Uyw01hQV1sWz1I69
      RI8fDnz0xjRjN/ujDt4MNZOCQWixc2y1JZtp3valFwW3N6i+Xq9fmv/wp+9+r4MyP5L86MRP
      LMGHkpOGwTaHuNpDyIppegl7c3txO5KwxzH6+rF/caTr6O2JEpZD0WN3ieh07h8NjFlNW35Y
      g46Bu5Q45By4u9UHSfcLQ690aO5Ofryi6ejGRyt3fKPe+HDxxtnUfaQhTn4STy8WJy4k7xGu
      VP3o7WUEAAAovSJMn1vbOH/jo9htD347V7z4SfruqTXjucWV+sYxQii9+vnrTiWRO/UPUx+9
      s6hvsT7pqAnLC5Mt+cSF9avfOfQ/KlJpOrMQtPm6re50vRB2Diu67nOP5vOXryavAwAODv7Q
      CqsKIufLlQE73+s/zoGfnUsvPz3yX2vNWA1Yeu2OVL3pJMTZanOPK5yppiKO6Lm5v8u32xCj
      n9nzQyAX+qLPT658aKXN5+Z/WVd1xtzzbP9zRWEON2EY4R8JH7y4fMpn9RcaggvLv7N46fm9
      f9ooT5G0t6ICP2tHkA9R5eO7f2yF9bxK8bDR0GivmXl/4m/E+75x6fl0W1SX5wSeAYuLVaeN
      bNak0HhX4vp6IduUGqpQqHeFmaXpwu4j4aXrKYymlLbSd6g34EQrC5ViRbXzcnGlMnMZQ1pL
      yDSe/N6uL7OEV6eyck0sreXOns5Vkvne/dGZU/OCiNfzNSjPVlvQymMVER57oT9+fb2iWE/9
      4roj6khM55/44f7spfl4UQv2OQuxgjXqw2pFtaGu1iClBNZnMpzdPHE++U/+l6c2sj5/avWZ
      P9qfmM9d/XDOG2LTa81soe3rch95InL3u7EjjSiGa9UW4GxcyG0JpXOfOG2DPsduHEmSIgbt
      Ny1KUW66rF0he7eVC7n5oCoXdMK9L/S0k5ZvZOaC9qjfMaSrLaut73j0CQBZO8NqGO/n3QAA
      knTt8g7aOG9RWArbox8tviMjAADwuvZnM+9FA096LOGA1Zcqr/YFjkCM7Xb1reauA4BEpRV0
      9HqtEbetx05zE4nT2UYtYHVH3WNh3nJx9dxw+ARBB+2mLdRKJM+OP9fndlHZeFVIlnMFeXTM
      vngxTkd8dhtpj7igJGbWyrWMsDhV6N7jrdUUkoD5VNXE0UuX4+18oQVMbQW63WZPrxe2Wl/6
      nqGpq4sCjaTpS2lbj8ff7WwJtVSqvf9YCEIwfzUp1poqwJvZelPS7B6OlERzjzc7lyFtFiuH
      N0rNrrHAwieLXFcwu7hmNZFeL5VcKLWFciarCGU5GLV8JlyKhPWaOHV6ZnW5WslXS5lacLSv
      tJ67593Af/rTn97/vfsMWZZTxdXTy3+vaYrQyKq6tC6shyz2lfxUoZ4qt2uz8Q9kQOoAL1YW
      vPb+fC1JU3ZdLk3mYn6WWi1OJ4W1tpSbyU3ouNtLE2VJFKpLhVYZKeVzK2dsDL2UnaVJMl6X
      I2YtV8+3NFirLSUatVRpbsi/B5p8UIznqomI/8TM6m80wl+vLSYbhbXMVbMJTCevllvZtoZ4
      1lutraSabZMmrBZmi/W0KFcUSKUKNxaFXK/dO5G6btLLC/kV/f4ufDRynLVjNjdHEBjPk2a3
      NdjrcPp5PuRCxbIl4OApYAm63C6Kdloivfb1yaTGck6bKTjgsdgYkoTBbpe3z8mbWYqF/h6H
      w8NZ3dwmzzGCehOYI9zw8ajalNxRh5UBnNfe3c2trjaC3faeXS5Es34fg0ymULedIDBLxC2m
      il3jEbuTtbmY7Gy60IKHXxxqJvPR/X2iLEPWvOdImGQYC6V7+7xmCrOHbRgApMJFdnOL15LO
      vtDwsD2fl7uGvC6fxcZjmVTd7bfc5YY8DCMaxwhN36ajEwAch5p2RxkxSOho22luny0Z0WK1
      MXMlN3Akypu3bip0bEQXV4vmsIu5j5y/1IhGSNMQTtytmeqoCYMQJ3ETy+x5YfcTBG7CIMQx
      E46ZjvS+eKjnOQwSBIb3dr3yyuALEGIkboIQhwCylj2HIyeeH/vvj0U2dy18kU3UAwD4StSz
      AdJ1RdF0Tdd11MqX56YFTdE0TdcUTdMQQkiRVF3XdR2RHDv2RNfiqZnlpYoiqQghVVZ1/ebv
      +8lLVzVV1TVVU1W9Xc5//FZc03Rd1VRF01RNkTWEkCI33v9/Lrz3m5im6bqmK4qGdKTIqj3i
      vB/1bLCRmiKrG9elaboiq4ooT19NqoqqaUhVVFVR3v672z3DHRnRuwf/YswsiciuoPgrB/8F
      Iy7TrrHY6qnhnmdL1WTANVos3YA45vY/8yQRilg9icJ0f/DwipDooqBk8q1Vdtr9/1A4/5sb
      tYpMskR4LDR/MgZd/OwHc5iF1iv1E39yGBayJ09mxvY6qqSttrSeLygkkkYdljd+d809EmoU
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
